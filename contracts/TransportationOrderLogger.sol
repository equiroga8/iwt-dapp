// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;


/**
 * @title Transport Order Logger
 * @author equiroga8
 * This contract logs all the events generated by the transportation order contracts.
 **/
 
contract TransportationOrderLogger {
    
    event OrderCreationRequest(address contractAddr, address clientDID);
    
    function orderCreationRequestEvent(address _orderAddress) public {
        emit OrderCreationRequest(_orderAddress, tx.origin);
    }
    
    event OrderCreated(address contractAddr, address clientDID);
    
    function orderCreatedEvent(address _orderAddress, address _clientDID) public {
        emit OrderCreated(_orderAddress, _clientDID);
    }
    
    event OrderCanceled(address contractAddr, address clientDID);
    
    function orderCanceledEvent(address _orderAddress, address _clientDID) public {
        emit OrderCanceled(_orderAddress, _clientDID);
    }
    
    event OrderAssignmentRequest(address contractAddr, address operatorDID, bytes32 uuid);
    
    function orderAssignmentRequestEvent(address _orderAddress, address _operatorDID, bytes32 _uuid) public {
        emit OrderAssignmentRequest(_orderAddress, _operatorDID, _uuid);
    }
    
    event OrderAssigned(address orderAddress, address operatorDID);
    
    function orderAssignedEvent(address _orderAddress, address _operatorDID) public {
        emit OrderAssigned(_orderAddress, _operatorDID);
    }
    
    event InspectorRoleRequest(address orderAddress, address _did, bytes32 uuid);
    
    function inspectorRoleRequestEvent(address _orderAddress, address _inspectorDID, bytes32 _uuid) public {
        emit InspectorRoleRequest(_orderAddress, _inspectorDID, _uuid);
    }
    
    event InspectorRoleAssigned(address orderAddress, address _did);

    function inspectorRoleAssignedEvent(address _orderAddress, address _inspectorDID) public {
        emit InspectorRoleAssigned(_orderAddress, _inspectorDID);
    }
    
    event GaugerRoleRequest(address orderAddress, address _did, bytes32 uuid);
    
    function gaugerRoleRequestEvent(address _orderAddress, address _gaugerDID, bytes32 _uuid) public {
        emit GaugerRoleRequest(_orderAddress, _gaugerDID, _uuid);
    }
    
    event GaugerRoleAssigned(address orderAddress, address _did);
    
    function gaugerRoleAssignedEvent(address _orderAddress, address _gaugerDID) public {
        emit GaugerRoleAssigned(_orderAddress, _gaugerDID);
    }
}